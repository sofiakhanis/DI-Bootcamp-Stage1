# -*- coding: utf-8 -*-
"""Week7Day4EXP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yZxWv6r_7MyXereqKVqPxAWzGbp8pFZz
"""

import pandas as pd
from openpyxl import Workbook

wb = Workbook ()
sheet = wb.active

sheet.title = "Calculator"

sheet ['A1'] = "First number ==>"
sheet ['A2'] = "Second number ==>"

sheet ['B3'] = '=B1*B2'

wb.save('calculator.xlsx')

wb.close()

#exercise 2

import openpyxl

plants_wb = openpyxl.load_workbook("Plants.xlsx")

sheet1 = plants_wb ['Sheet1']
cell = sheet1['A2']

while cell.value is not None:
    stock_cell = cell.offset(row=0, column=7)
    if stock_cell.value == 'No':
      print(cell.value)
    cell = cell.offset(row=1, column=0)

#exercise 3

import pandas as pd
from openpyxl import load_workbook

file_path = "data.xlsx"
df = pd.read_excel(file_path)

df.columns = df.columns.str.strip()

filtered_df = df[df["Sales"] > 1000]

with pd.ExcelWriter(file_path, engine='openpyxl', mode='a', if_sheet_exists='replace') as writer:
    filtered_df.to_excel(writer, sheet_name='Filtered', index=False)

#exerise 4
import matplotlib.pyplot as plt
product_df = pd.read_excel("productSales.xlsx", sheet_name="Sheet1")

grouped_df = product_df.groupby('product', as_index=False)['sales'].sum()
grouped_df.to_excel("sales_report.xlsx", index=False)

grouped_df.plot(x='product', y='sales', kind='bar', legend=False, title='Total Sales by Product')
plt.ylabel('Sales')
plt.tight_layout()
plt.show()

grouped_df.close()